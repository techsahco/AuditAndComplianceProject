<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <title>@ViewBag.Title - Audit Compliance IMC</title>
    @Styles.Render("~/Content/css")
    <!-- Add Toastr.css for styles -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet">

    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    @if (IsSectionDefined("Styles"))
    {@RenderSection("Styles", required: false)}
    <style>
        /* CSS for the overlay */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 999;
        }

        /* CSS for the popup */
        .popup {
            width: 25%;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            z-index: 1000;
        }

        /* CSS for the buttons */
        .popup-button {
            display: inline-block;
            margin: 10px;
            padding: 10px 20px;
            background-color: #0074d9;
            color: white;
            border: none;
            cursor: pointer;
        }
        .popup-button-cancel {
            display: inline-block;
            margin: 10px;
            padding: 10px 20px;
            background-color: #f51d53;
            color: white;
            border: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini">

    <div class="wrapper">
        <div class="overlay" id="confirmation-popup">
            <div class="popup col-md-4">
                <div style="display:flex;justify-content:center">
                    <img src="~/Content/thinking.png" width="50" />
                </div>
                <h4 style="text-align:center;padding-top: 10px;"><b>ARE YOU SURE?</b></h4>
                <div style="display:flex;justify-content:center">
                    <button class="popup-button" onclick="confirmAction()">YES</button>
                    <button class="popup-button-cancel" onclick="closePopup()">NO</button>
                </div>
            </div>
        </div>

        @Html.Partial("_Header")

        @Html.Partial("_SidebarUser") @*@Html.Partial("_Sidebar")*@

        @RenderBody()

        @Html.Partial("_Footer")

        @Html.Partial("_Aside")
        <!-- Add the sidebar's background. This div must be placed
    immediately after the control sidebar -->
        <div class="control-sidebar-bg"></div>
    </div>




    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/lib")

    <!-- Add Toastr.js for functionality -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    @RenderSection("scripts", required: false)
    <script>
        $(document).ready(function () {
            toastr.options = {
                "closeButton": true,
                "positionClass": "toast-top-right",
            }
            var userRole = getUserRole();
            getUserName(userRole);
        });

        function showPopup() {
            document.getElementById("confirmation-popup").style.display = "block";
        }

        function closePopup() {
            document.getElementById("confirmation-popup").style.display = "none";
        }
        function Logout() {
            
            $.ajax({
                type: 'POST',
                url: '/Account/LogOff',
                success: function (response) {
                    window.location.href = "/Account/Login";
                },
                error: function (xhr, status, error) {

                    toastr.error("Unexpected error has occured");
                }
            });
        }

        // Get UserRole from cookie
        function getUserRole() {
            debugger;
            var authCookie = document.cookie
                .split('; ')
                .find(row => row.startsWith('@FormsAuthentication.FormsCookieName='));

            if (authCookie) {
                var cookieValue = authCookie.split('=')[1];
                // Decode the base64 encoded authentication ticket
                var decodedValue = atob(cookieValue);
                // Parse the JSON string in the authentication ticket
                var authTicket = JSON.parse(decodedValue);
                var userRole = authTicket.UserData;

                // Now, you have the user role in the 'userRole' variable, and you can use it as needed.
                // For example, you can conditionally show/hide elements based on the user's role.
                if (userRole === 'Admin') {
                    // User is an admin, do something
                    console.log('User Role: ' + userRole);
                    return authTicket;
                    console.log('User Role: ' + userRole);
                } else if (userRole === 'User') {
                    // User is a regular user, do something else
                    console.log('User Role: ' + userRole);
                    return authTicket;
                }
            }
            return null;
        }

        //Get UserName
        function getUserName(userRole) {
            debugger;
            // Get user details from the cookie and update the user name in the sidebar
            if (userRole && userRole.Name) {
                document.getElementById('user-name').textContent = userRole.Name; 
                document.getElementById('user-name-notification').textContent = userRole.Name;
                document.getElementById('user-name-notification-inner').textContent = userRole.Name;
            }
        }
    </script>
</body>
</html>
